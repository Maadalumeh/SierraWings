"""
SierraWings Feedback Service
Handles feedback submissions and email delivery to SierraWingsOfficial@gmail.com
"""
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime
import logging

# Gmail configuration
GMAIL_USER = "SierraWingsOfficial@gmail.com"
GMAIL_PASSWORD = "M208002074#"  # Gmail App Password
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587

def send_feedback_email(name, email, message, user_role="Unknown"):
    """
    Send feedback email to SierraWingsOfficial@gmail.com
    
    Args:
        name: User's name
        email: User's email
        message: Feedback message
        user_role: User's role (Patient, Hospital, Admin)
    """
    try:
        # Create message
        msg = MIMEMultipart()
        msg['From'] = GMAIL_USER
        msg['To'] = GMAIL_USER
        msg['Subject'] = f"SierraWings Feedback from {name} ({user_role})"
        
        # Create email body
        body = f"""
New Feedback Received from SierraWings App

User Details:
- Name: {name}
- Email: {email}
- Role: {user_role}
- Submission Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

Message:
{message}

---
This feedback was automatically sent from the SierraWings medical drone delivery platform.
        """
        
        msg.attach(MIMEText(body, 'plain'))
        
        # Setup SMTP server
        server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        server.starttls()
        server.login(GMAIL_USER, GMAIL_PASSWORD)
        
        # Send email
        text = msg.as_string()
        server.sendmail(GMAIL_USER, GMAIL_USER, text)
        server.quit()
        
        logging.info(f"Feedback email sent successfully from {name} ({email})")
        return True
        
    except Exception as e:
        logging.error(f"Failed to send feedback email: {str(e)}")
        return False

def send_maintenance_feedback_report(alert_type, title, message, recipients_count):
    """
    Send maintenance alert delivery report to SierraWingsOfficial@gmail.com
    
    Args:
        alert_type: Type of maintenance alert
        title: Alert title
        message: Alert message
        recipients_count: Number of recipients
    """
    try:
        # Create message
        msg = MIMEMultipart()
        msg['From'] = GMAIL_USER
        msg['To'] = GMAIL_USER
        msg['Subject'] = f"SierraWings Maintenance Alert Delivery Report"
        
        # Create email body
        body = f"""
Maintenance Alert Delivery Report

Alert Details:
- Type: {alert_type}
- Title: {title}
- Sent Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
- Recipients: {recipients_count} users

Alert Message:
{message}

---
This report was automatically generated by the SierraWings maintenance alert system.
        """
        
        msg.attach(MIMEText(body, 'plain'))
        
        # Setup SMTP server
        server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
        server.starttls()
        server.login(GMAIL_USER, GMAIL_PASSWORD)
        
        # Send email
        text = msg.as_string()
        server.sendmail(GMAIL_USER, GMAIL_USER, text)
        server.quit()
        
        logging.info(f"Maintenance report sent successfully for {alert_type} alert")
        return True
        
    except Exception as e:
        logging.error(f"Failed to send maintenance report: {str(e)}")
        return False